name: Collections_new
on:
  push:
  workflow_dispatch: 
  
jobs:
  reading_json:
    name: Reading JSON
    runs-on: windows-latest
    outputs:
      output1: ${{ steps.step1.outputs.name }}
      output2: ${{ steps.step1.outputs.emp_id }}
      output3: ${{ steps.step1.outputs.version }}
    steps:
      - name: code checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Task1- Read the config file and display the contents of it.
        id: step1
        run: |
          $myJson = Get-Content ".github/devops.config" -Raw | ConvertFrom-Json 
          echo $myJson
          $myName = $myJson.name
          $myEmpId = $myJson.employee_id
          $Myversion = $myJson.version
          echo $myName, $myEmpId, $Myversion
          echo "::save-output name={name}::{$myName}"
          echo "::save-output name={emp_id}::{$myEmpId}"
          echo "::save-output name={version}::{$Myversion}"
  fetching_json:
    name: Fetch Json
    needs: reading_json
    runs-on: windows-latest   
    steps:
      - env:
          OUTPUT1: ${{needs.reading_json.outputs.output1}}
          OUTPUT2: ${{needs.reading_json.outputs.output2}}
          OUTPUT3: ${{needs.reading_json.outputs.output3}}
        run: |
          echo "$OUTPUT1, $OUTPUT2, $OUTPUT3"
          if ([string]::IsNullOrEmpty($OUTPUT1) -or [string]::IsNullOrEmpty($OUTPUT2) -or [string]::IsNullOrEmpty($$OUTPUT3)) 
          {echo "value is null"}
  fetching_details:
    name: Github Details
    needs: fetching_json
    runs-on: windows-latest
    steps:
      - name: Tas4- display workflow ref-path, repo-name, author, build-no, branch name
        run: |
          echo "author: ${{ github.repository_owner }}"
          echo "workflow ref-path: ${{ github.workflow_ref }}"
          echo "branch name: ${{ github.ref_name }}"
          echo "build-no: ${{ github.run_number }}"
          echo "repo name: ${{ github.repository }}"
  create_secrets:
    name: Create Secrets
    needs: fetching_details
    runs-on: windows-latest
    steps:
      - name: Task5- create secrets and use those secrets in your job
        env:
          PASSWORD_PS: ${{secrets.PASSWORD}}
        run: echo $PASSWORD
  Github_Release:
    name: Create Release
    needs: create_secrets
    runs-on: windows-latest
    steps: 
      - name: Task7 - create a release with (your name - repo name - branch name - workflow no)
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{github.actor}}-${{github.run_number}}
          release_name: ${{github.actor}}-${{github.run_number}}

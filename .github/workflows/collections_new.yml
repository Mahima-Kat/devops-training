name: Collections_new
on:
  push:
  workflow_dispatch: 
  
jobs:
  reading_json:
    name: Reading JSON
    runs-on: windows-latest
    steps:
      - name: code checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Task1- Read the config file and display the contents of it.
        id: step1
        run: |
          #storing the values from json file to $myJson
          $myJson = Get-Content ".github/devops.config" -Raw | ConvertFrom-Json 
          echo $myJson
          #fetching the values from json file to variables
          $myName = $myJson.name
          $employeeId = $myJson.employee_id
          $versionNo = $myJson.version
          echo "$myName"
          echo "name=${myName}" >> $env:GITHUB_ENV
          echo "emp_id=${employeeId}" >> $env:GITHUB_ENV
          echo "version=${versionNo}" >> $env:GITHUB_ENV
      - name: Checking value null or not
        run: |
          echo "My name is - $Env:name" 
          echo "$env:emp_id" 
          echo "$env:version" 
          #If value are empty it will show error
          if ([string]::IsNullOrEmpty($env:name) -or [string]::IsNullOrEmpty($env:emp_id) -or [string]::IsNullOrEmpty($env:version)) 
          {echo "::error:: values is/are null"}
  fetching_details:
    name: Github Details
    needs: reading_json
    runs-on: windows-latest
    steps:
      - name: Tas4- display workflow ref-path, repo-name, author, build-no, branch name
        run: |
          echo "author: ${{ github.repository_owner }}"
          echo "workflow ref-path: ${{ github.workflow_ref }}"
          echo "branch name: ${{ github.ref_name }}"
          echo "build-no: ${{ github.run_number }}"
          echo "repo name: ${{ github.repository }}"
  create_secrets:
    name: Create Secrets
    needs: fetching_details
    runs-on: windows-latest
    steps:
      - name: Task5- create secrets and use those secrets in your job
        env:
          PASSWORD_PS: ${{secrets.PASSWORD}}
        run: echo $PASSWORD
  github_release:
    name: Create Release
    needs: create_secrets
    runs-on: windows-latest
    steps: 
      - name: identify latest gitHub release and assign to variable
        run: |
          $latestRelease = Invoke-RestMethod -Uri "https://api.github.com/repos/Mahima-Kat/devops-training/releases/latest"
          $latestVersion = $latestRelease.tag_name
          echo "$latestVersion"
          $latestReleaseNumber = $latestVersion.Split('.')[1]
          $releaseNumberVariable = $latestReleaseNumber
          echo "$releaseNumberVariable"
          $currentReleaseNumber = [int]$releaseNumberVariable
          $currentReleaseNumber++
          $newReleaseNumber = $currentReleaseNumber.ToString()
          $releaseNumberVariable1 = $newReleaseNumber
          echo "$releaseNumberVariable1"
          echo "$latestVersion"-"$releaseNumberVariable"-"$releaseNumberVariable1"
          
    



    
